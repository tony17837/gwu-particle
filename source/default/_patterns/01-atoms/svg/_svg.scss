////
/// SVG printing CSS
///
/// @group svg
////

// Built-in modules
@use 'sass:map';
// Particle tokens
@use '~tokens/sass/utils';
// Generated SVGs and vars
@use 'scss/utils' as svg;

// Set svg elements to current color.
.svg--colorable {
  @include svg.elements() {
    color: currentColor;
    fill: currentColor;
  }
}

// Defaults for .svg--icon generated CSS
.svg--icon {
  display: inline-block;
  width: utils.f-rem-calc(40px);

  svg {
    display: block;
    width: utils.f-rem-calc(300px);
    max-width: 100%;
    max-height: utils.f-rem-calc(300px);
    height: auto;
  }

  // Set svgicon elements to current color.
  @include svg.elements() {
    color: currentColor;
    fill: currentColor;
  }
}

// Loop over every custom-generated SVG and create a CSS class for it
@each $icon in svg.$svgicons {
  .icon--#{$icon} {
    @include svg.sprite(#{$icon});
    display: inline-block;
    height: utils.f-rem-calc(40px);
    width: utils.f-rem-calc(40px);
  }
}

// Loop over every theme-color and create a CSS class to colorize it
@each $color in map.keys(utils.$bs-theme-colors) {
  .color-fill--#{$color} {
    color: utils.bs-theme-color(#{$color});
  }

  .color-stroke--#{$color} {
    color: utils.bs-theme-color(#{$color});
    svg {
      stroke: currentColor;
      fill: none;
    }
  }
}
